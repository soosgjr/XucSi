//-----------------------------------------------------------------------
int ModelSetup()
  int self
  int ammo_on_back
  int hair_color_rgb, hair_texture
  int body_color_rgb, body_color_dull, body_color_gloss
  int limb_color_rgb, limb_color_dull, limb_color_gloss
  int steel_color, gold_color
  int flesh_color, foot_color
  int head_type, hat_type, mouth_type, tunic_type, pants_type, hair_type, skin_type, hair_color_index
  int helm_type, armor_type, legging_type
  int subtype
  int openfile, offset
  self = FindSelf()


  // Funky shield stuff...
  FUNKY.ShieldUnpress()


  // Get the class subtype from the fourth slider...
  subtype = (self.eqcol01 >> 4)
  openfile = "FILE:PLAYER.DAT"
  offset = (self.class & 7) * 80


  // Use the class subtype to find the appearance data in PLAYER.DAT...
  skin_type = FileReadByte(openfile, offset+12 + (subtype>>3))
  tunic_type = FileReadByte(openfile, offset+14)
  pants_type = FileReadByte(openfile, offset+15)
  head_type = FileReadByte(openfile, offset+16+subtype)
  hair_type = FileReadByte(openfile, offset+32+subtype)
  mouth_type = FileReadByte(openfile, offset+48+subtype)
  hat_type = FileReadByte(openfile, offset+64+subtype)


  // Use the character's inventory to handle equip'd armor...
  helm_type = self.eqhelm & 252
  armor_type = self.eqbody & 252
  legging_type = self.eqlegs & 252


  // Figger which hair color the user wants...
  hair_color_index = self.eqcol01 & 15


  // Armor colors based on team...
  if(self.team == TEAM_GOOD || self.team == TEAM_NEUTRAL)
    gold_color = "FILE:GOLD.RGB"
    steel_color = "FILE:STEEL.RGB"
  else
    gold_color = "FILE:DGOLD.RGB"
    steel_color = "FILE:DSTEEL.RGB"


  // Get the skin color...
  flesh_color = "FILE:FLESH.RGB"
  if(skin_type == 1)
    // Tanned skin
    flesh_color = "FILE:TFLESH.RGB"
  if(skin_type == 2)
    // Dark skin...
    flesh_color = "FILE:DFLESH.RGB"
  if(skin_type == 1 || skin_type == 2)
    // Force certain hair colors...
    if(hair_color_index > 3 && hair_color_index < 8)
      hair_color_index = 3
    if(hair_color_index > 7 && hair_color_index < 14)
      hair_color_index = 14
  if(skin_type == 3)
    // Tanned skin with reddish hair...
    flesh_color = "FILE:TFLESH.RGB"
    // Force certain hair colors...
    if(hair_color_index < 4)
      hair_color_index = 4
    if(hair_color_index > 13)
      hair_color_index = 13
  if(skin_type == 4)
    // Blue skin...
    flesh_color = "FILE:DBLUE.RGB"
    // Force white hair
    hair_color_index = 15
  if(skin_type == 5)
    // Force white hair...
    hair_color_index = 15
  if(skin_type == 6)
    // Dark skin with white hair...
    flesh_color = "FILE:DFLESH.RGB"
    hair_color_index = 15
  if(skin_type == 7)
    // Force non-white hair...
    if(hair_color_index > 14)
      hair_color_index = 14



  // Figger the colors to actually use...
  hair_color_rgb   = HairColor(hair_color_index)
  body_color_rgb   = RGBColor(self.eqcol23 >> 4)
  body_color_dull  = DullColor(self.eqcol23 >> 4)
  body_color_gloss = GlossColor(self.eqcol23 >> 4)
  limb_color_rgb   = RGBColor(self.eqcol23 & 15)
  limb_color_dull  = DullColor(self.eqcol23 & 15)
  limb_color_gloss = GlossColor(self.eqcol23 & 15)




  // Give Hubbins flesh color'd feet...
  foot_color = limb_color_dull
  if(self.class == CLASS_HUBBIN)
    foot_color = flesh_color




  // Get the hair texture from the type...
  hair_texture = "FILE:HAIR2.RGB"
  if(hair_type == 0)
    hair_texture = "FILE:HAIR0.RGB"
  if(hair_type == 1)
    hair_texture = "FILE:HAIR1.RGB"



  // Clear the model...
  ModelClear()


  // Animations (bones)
  if(self.class == CLASS_GNOME || self.class == CLASS_DWARF || self.class == CLASS_HUBBIN)
    ModelAssign(self+MODEL_BASE_FILE, "FILE:PLAYERSM.RDY")
  else
    ModelAssign(self+MODEL_BASE_FILE, "FILE:PLAYER.RDY")
  ModelAssign(self+MODEL_BASE_TEX0, "FILE:WHITE.RGB")
  ModelAssign(self+MODEL_BASE_TEX1, "FILE:WHITE.RGB")
  ModelAssign(self+MODEL_BASE_TEX2, "FILE:WHITE.RGB")
  ModelAssign(self+MODEL_BASE_TEX3, "FILE:WHITE.RGB")
  ModelAssign(self+MODEL_BASE_COLOR, WHITE)



  // Give the character a head...
  if(helm_type >= ITEM_HELM_1 && helm_type <= ITEM_HELM_5)
    // Character is wearing a helm...
    if(helm_type == ITEM_HELM_1)
      // Stuff for helm type 1
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHELM0.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, "FILE:DYELLOW.RGB")
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, body_color_rgb)
    if(helm_type == ITEM_HELM_2)
      // Stuff for helm type 2
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHELM1.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, steel_color)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, WHITE)
    if(helm_type == ITEM_HELM_3)
      // Stuff for helm type 3
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHELM2.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, steel_color)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, WHITE)

      ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRPLUM2.RDY")
      ModelAssign(self+MODEL_HAIR_TEX0, "FILE:HAIR1.RGB")
      ModelAssign(self+MODEL_HAIR_TEX1, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HAIR_TEX2, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_HAIR_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_HAIR_COLOR, body_color_rgb)
    if(helm_type == ITEM_HELM_4)
      // Stuff for helm type 4
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHELM3.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, steel_color)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, WHITE)
    if(helm_type == ITEM_HELM_5)
      // Stuff for helm type 5
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHELM4.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, gold_color)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, WHITE)

      ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRPLUM4.RDY")
      ModelAssign(self+MODEL_HAIR_TEX0, body_color_dull)
      ModelAssign(self+MODEL_HAIR_TEX1, limb_color_dull)
      ModelAssign(self+MODEL_HAIR_TEX2, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_HAIR_TEX3, "FILE:SHADPLUM.RGB")
      ModelAssign(self+MODEL_HAIR_COLOR, body_color_rgb)
  else
    // Character is not wearing a helm...  Use head type...
    if(head_type == 0)
      // Stuff for head type 0 - Totally Bald
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD0.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 1)
      // Stuff for head type 1 - Balding Wooly
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD1.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 2)
      // Stuff for head type 2 - Politician
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD2.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 3)
      // Stuff for head type 3 - Scruffy
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD3.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 4)
      // Stuff for head type 4 - Long Sides
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD4.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 5)
      // Stuff for head type 5 - Vampire
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD5.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 6)
      // Stuff for head type 6 - Hattable 1
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD6.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 7)
      // Stuff for head type 7 - Hattable 2
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD7.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)
    if(head_type == 8)
      // Stuff for head type 8 - Female with hair in bun
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD8.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)

      ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAIR0.RDY")
      ModelAssign(self+MODEL_HAIR_TEX0, limb_color_dull)
      ModelAssign(self+MODEL_HAIR_TEX1, hair_texture)
      ModelAssign(self+MODEL_HAIR_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HAIR_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HAIR_COLOR, hair_color_rgb)
    if(head_type == 9)
      // Stuff for head type 9 - Female with hair in pony tail
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD8.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)

      ammo_on_back = (self.eqright >= ITEM_BOW && self.eqright <= (ITEM_LONG_BOW+3))
      if(ammo_on_back == FALSE)
        ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAIR1.RDY")
        ModelAssign(self+MODEL_HAIR_TEX0, limb_color_dull)
        ModelAssign(self+MODEL_HAIR_TEX1, hair_texture)
        ModelAssign(self+MODEL_HAIR_TEX2, "FILE:DBLACK.RGB")
        ModelAssign(self+MODEL_HAIR_TEX3, "FILE:HAIRSHIN.RGB")
        ModelAssign(self+MODEL_HAIR_COLOR, hair_color_rgb)
      else
        // We'll have to put the pony tail up into a bun if we've got a quiver...
        ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAIR0.RDY")
        ModelAssign(self+MODEL_HAIR_TEX0, limb_color_dull)
        ModelAssign(self+MODEL_HAIR_TEX1, hair_texture)
        ModelAssign(self+MODEL_HAIR_TEX2, "FILE:DBLACK.RGB")
        ModelAssign(self+MODEL_HAIR_TEX3, "FILE:HAIRSHIN.RGB")
        ModelAssign(self+MODEL_HAIR_COLOR, hair_color_rgb)
    if(head_type == 10)
      // Stuff for head type 10 - Female with hair in pig tails
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD8.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)

      ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAIR2.RDY")
      ModelAssign(self+MODEL_HAIR_TEX0, limb_color_dull)
      ModelAssign(self+MODEL_HAIR_TEX1, hair_texture)
      ModelAssign(self+MODEL_HAIR_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HAIR_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HAIR_COLOR, hair_color_rgb)
    if(head_type == 11)
      // Stuff for head type 11 - Female with hair in side bun type things
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD8.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)

      ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAIR3.RDY")
      ModelAssign(self+MODEL_HAIR_TEX0, limb_color_dull)
      ModelAssign(self+MODEL_HAIR_TEX1, hair_texture)
      ModelAssign(self+MODEL_HAIR_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HAIR_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HAIR_COLOR, hair_color_rgb)
    if(head_type == 12)
      // Stuff for head type 11 - Afro hair
      ModelAssign(self+MODEL_HEAD_FILE, "FILE:PLRHEAD9.RDY")
      ModelAssign(self+MODEL_HEAD_TEX0, flesh_color)
      ModelAssign(self+MODEL_HEAD_TEX1, hair_texture)
      ModelAssign(self+MODEL_HEAD_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_HEAD_TEX3, "FILE:HAIRSHIN.RGB")
      ModelAssign(self+MODEL_HEAD_COLOR, hair_color_rgb)




    // Put hat on hattable head...
    if(head_type == 6 || head_type == 7)
      if(hat_type == 0)
        // Hat type 0 - Point'd wizard hat
        ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAT0.RDY")
        ModelAssign(self+MODEL_HAIR_TEX0, body_color_dull)
        ModelAssign(self+MODEL_HAIR_TEX1, "FILE:DBLACK.RGB")
        ModelAssign(self+MODEL_HAIR_TEX2, "FILE:=ARMOR.RGB")
        ModelAssign(self+MODEL_HAIR_TEX3, "FILE:=STAR.RGB")
        ModelAssign(self+MODEL_HAIR_COLOR, limb_color_rgb)
      if(hat_type == 1)
        // Hat type 1 - Brim'd wizard hat
        ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAT1.RDY")
        ModelAssign(self+MODEL_HAIR_TEX0, body_color_dull)
        ModelAssign(self+MODEL_HAIR_TEX1, "FILE:DBLACK.RGB")
        ModelAssign(self+MODEL_HAIR_TEX2, "FILE:=ARMOR.RGB")
        ModelAssign(self+MODEL_HAIR_TEX3, "FILE:=ARMOR.RGB")
        ModelAssign(self+MODEL_HAIR_COLOR, limb_color_rgb)
      if(hat_type == 2)
        // Hat type 2 - Gem'd mystic turban
        ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAT2.RDY")
        ModelAssign(self+MODEL_HAIR_TEX0, body_color_dull)
        ModelAssign(self+MODEL_HAIR_TEX1, limb_color_gloss)
        ModelAssign(self+MODEL_HAIR_TEX2, "FILE:SHADMUMM.RGB")
        ModelAssign(self+MODEL_HAIR_TEX3, "FILE:=GEM.RGB")
        ModelAssign(self+MODEL_HAIR_COLOR, YELLOW)
      if(hat_type == 3)
        // Hat type 3 - Feather'd mystic turban
        ModelAssign(self+MODEL_HAIR_FILE, "FILE:PLRHAT3.RDY")
        ModelAssign(self+MODEL_HAIR_TEX0, body_color_dull)
        ModelAssign(self+MODEL_HAIR_TEX1, limb_color_gloss)
        ModelAssign(self+MODEL_HAIR_TEX2, "FILE:SHADMUMM.RGB")
        ModelAssign(self+MODEL_HAIR_TEX3, "FILE:=FEATHER.RGB")
        ModelAssign(self+MODEL_HAIR_COLOR, YELLOW)


  // Give the character a chest and arms...
  if(armor_type >= ITEM_BODY_1 && armor_type <= ITEM_BODY_5)
    // Character is wearing armor...
    if(armor_type == ITEM_BODY_1)
      // Stuff for armor type 1
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRBODY0.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX1, "FILE:NYELLOW.RGB")
      ModelAssign(self+MODEL_CHEST_TEX2, body_color_gloss)
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADBOD0.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

      ModelAssign(self+MODEL_PADS_FILE, "FILE:PLRPADS0.RDY")
      ModelAssign(self+MODEL_PADS_TEX0, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_TEX1, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_TEX2, "FILE:=TASSLE.RGB")
      ModelAssign(self+MODEL_PADS_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS0.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, "FILE:DYELLOW.RGB")
      ModelAssign(self+MODEL_ARMS_TEX2, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)
    if(armor_type == ITEM_BODY_2)
      // Stuff for armor type 2
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRBODY1.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, body_color_dull)
      ModelAssign(self+MODEL_CHEST_TEX1, steel_color)
      ModelAssign(self+MODEL_CHEST_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADBOD1.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS1.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, steel_color)
      ModelAssign(self+MODEL_ARMS_TEX2, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)
    if(armor_type == ITEM_BODY_3)
      // Stuff for armor type 3
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRBODY2.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, body_color_dull)
      ModelAssign(self+MODEL_CHEST_TEX1, steel_color)
      ModelAssign(self+MODEL_CHEST_TEX2, steel_color)
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADBOD2.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_PADS_FILE, "FILE:PLRPADS2.RDY")
      ModelAssign(self+MODEL_PADS_TEX0, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_TEX1, steel_color)
      ModelAssign(self+MODEL_PADS_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_PADS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_PADS_COLOR, WHITE)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS2.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, steel_color)
      ModelAssign(self+MODEL_ARMS_TEX2, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)


      if(self.class == CLASS_HEALER)
        // Healer platemail...
        ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRTUNI3.RDY")
        ModelAssign(self+MODEL_CHEST_TEX0, body_color_dull)
        ModelAssign(self+MODEL_CHEST_TEX1, steel_color)
        ModelAssign(self+MODEL_CHEST_TEX2, steel_color)
        ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADTUN2.RGB")
        ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

    if(armor_type == ITEM_BODY_4)
      // Stuff for armor type 4
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRBODY3.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, steel_color)
      ModelAssign(self+MODEL_CHEST_TEX1, steel_color)
      ModelAssign(self+MODEL_CHEST_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADBOD3.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS3.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX1, steel_color)
      ModelAssign(self+MODEL_ARMS_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:SHADBOD3.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)
    if(armor_type == ITEM_BODY_5)
      // Stuff for armor type 5
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRBODY4.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX1, gold_color)
      ModelAssign(self+MODEL_CHEST_TEX2, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADBOD0.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

      // Cape...
      ammo_on_back = (self.eqright >= ITEM_BOW && self.eqright <= (ITEM_LONG_BOW+3))
      if(ammo_on_back == FALSE)
        ModelAssign(self+MODEL_PADS_FILE, "FILE:PLRPADS4.RDY")
        ModelAssign(self+MODEL_PADS_TEX0, body_color_dull)
        ModelAssign(self+MODEL_PADS_TEX1, "FILE:WHITE.RGB")
        ModelAssign(self+MODEL_PADS_TEX2, "FILE:=ARMOR.RGB")
        ModelAssign(self+MODEL_PADS_TEX3, "FILE:SHADCAP4.RGB")
        ModelAssign(self+MODEL_PADS_COLOR, WHITE)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS4.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX2, gold_color)
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)
  else
    // Character is in normal clothing...
    if(tunic_type == 0)
      // Stuff for tunic type 0 - Simple two color tunic
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRTUNI0.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, body_color_dull)
      ModelAssign(self+MODEL_CHEST_TEX1, limb_color_dull)
      ModelAssign(self+MODEL_CHEST_TEX2, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADTUN0.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

      // Give Hubbin a cape to start with...
      ammo_on_back = (self.eqright >= ITEM_BOW && self.eqright <= (ITEM_LONG_BOW+3))
      if(ammo_on_back == FALSE && self.class == CLASS_HUBBIN)
        ModelAssign(self+MODEL_PADS_FILE, "FILE:PLRPADS4.RDY")
        ModelAssign(self+MODEL_PADS_TEX0, body_color_dull)
        ModelAssign(self+MODEL_PADS_TEX1, "FILE:WHITE.RGB")
        ModelAssign(self+MODEL_PADS_TEX2, "FILE:=ARMOR.RGB")
        ModelAssign(self+MODEL_PADS_TEX3, "FILE:SHADCAP4.RGB")
        ModelAssign(self+MODEL_PADS_COLOR, WHITE)


      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS5.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_ARMS_TEX2, body_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, limb_color_rgb)
    if(tunic_type == 1)
      // Stuff for tunic type 1 - Collar'd shirt
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRTUNI1.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, body_color_dull)
      ModelAssign(self+MODEL_CHEST_TEX1, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX2, "FILE:SHADTUN1.RGB")
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS0.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, body_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX2, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)
    if(tunic_type == 2)
      // Stuff for tunic type 2 - Open Vest
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRTUNI2.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, body_color_dull)
      ModelAssign(self+MODEL_CHEST_TEX1, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADTUN2.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS6.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_TEX2, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)
    if(tunic_type == 3)
      // Stuff for tunic type 3 - Healer Tunic
      ModelAssign(self+MODEL_CHEST_FILE, "FILE:PLRTUNI3.RDY")
      ModelAssign(self+MODEL_CHEST_TEX0, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX1, body_color_gloss)
      ModelAssign(self+MODEL_CHEST_TEX2, flesh_color)
      ModelAssign(self+MODEL_CHEST_TEX3, "FILE:SHADTUN2.RGB")
      ModelAssign(self+MODEL_CHEST_COLOR, WHITE)

      ModelAssign(self+MODEL_PADS_FILE, "FILE:PLRPADS0.RDY")
      ModelAssign(self+MODEL_PADS_TEX0, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_TEX1, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_TEX2, "FILE:=TASSLE.RGB")
      ModelAssign(self+MODEL_PADS_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_PADS_COLOR, limb_color_rgb)

      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS7.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)


  if(self.class == CLASS_HEALER)
    // Force healer arms...
    if(armor_type != ITEM_BODY_2)
      ModelAssign(self+MODEL_ARMS_FILE, "FILE:PLRARMS7.RDY")
      ModelAssign(self+MODEL_ARMS_TEX0, flesh_color)
      ModelAssign(self+MODEL_ARMS_TEX1, limb_color_dull)
      ModelAssign(self+MODEL_ARMS_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_ARMS_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_ARMS_COLOR, WHITE)




  // Give the character some legs and feet...
  if(legging_type >= ITEM_LEGS_1 && legging_type <= ITEM_LEGS_5)
    // Character is wearing leggings...
    if(legging_type == ITEM_LEGS_1)
      // Stuff for leggings type 1
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRLEGS0.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, "FILE:DYELLOW.RGB")
      ModelAssign(self+MODEL_LEGS_TEX2, foot_color)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADLEG0.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, WHITE)
    if(legging_type == ITEM_LEGS_2)
      // Stuff for leggings type 2
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRLEGS1.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, steel_color)
      ModelAssign(self+MODEL_LEGS_TEX2, body_color_dull)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADLEG1.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, WHITE)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRFEET0.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_FEET_TEX1, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_TEX2, foot_color)
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, WHITE)
    if(legging_type == ITEM_LEGS_3)
      // Stuff for leggings type 3
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRLEGS2.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, steel_color)
      ModelAssign(self+MODEL_LEGS_TEX2, steel_color)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADLEG2.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRFEET2.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, foot_color)
      ModelAssign(self+MODEL_FEET_TEX1, steel_color)
      ModelAssign(self+MODEL_FEET_TEX2, steel_color)
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:SHADLEG2.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, body_color_rgb)


      if(self.class == CLASS_HEALER)
        // Healer platemail...
        ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRPANT3.RDY")
        ModelAssign(self+MODEL_LEGS_TEX0, body_color_dull)
        ModelAssign(self+MODEL_LEGS_TEX1, "FILE:PANT3.RGB")
        ModelAssign(self+MODEL_LEGS_TEX2, foot_color)
        ModelAssign(self+MODEL_LEGS_TEX3, "FILE:=ARMOR.RGB")
        ModelAssign(self+MODEL_LEGS_COLOR, body_color_rgb)

        ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRSHOE3.RDY")
        ModelAssign(self+MODEL_FEET_TEX0, steel_color)
        ModelAssign(self+MODEL_FEET_TEX1, "FILE:DBLACK.RGB")
        ModelAssign(self+MODEL_FEET_TEX2, "FILE:=GEM.RGB")
        ModelAssign(self+MODEL_FEET_TEX3, "FILE:WHITE.RGB")
        ModelAssign(self+MODEL_FEET_COLOR, YELLOW)


    if(legging_type == ITEM_LEGS_4)
      // Stuff for leggings type 4
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRLEGS3.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, steel_color)
      ModelAssign(self+MODEL_LEGS_TEX2, steel_color)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADBOD3.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRFEET3.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, foot_color)
      ModelAssign(self+MODEL_FEET_TEX1, steel_color)
      ModelAssign(self+MODEL_FEET_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:SHADBOD3.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, WHITE)
    if(legging_type == ITEM_LEGS_5)
      // Stuff for leggings type 5
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRLEGS4.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, body_color_gloss)
      ModelAssign(self+MODEL_LEGS_TEX2, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADLEG4.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, WHITE)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRFEET4.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, foot_color)
      ModelAssign(self+MODEL_FEET_TEX1, gold_color)
      ModelAssign(self+MODEL_FEET_TEX2, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:SHADBOD3.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, WHITE)
  else
    // Character is not wearing leggings...
    if(pants_type == 0)
      // Stuff for pants type 0 - Skirt'd Pants
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRPANT0.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, body_color_dull)
      ModelAssign(self+MODEL_LEGS_TEX2, "FILE:SHADPNT0.RGB")
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:BUCKLE.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, YELLOW)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRSHOE0.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, foot_color)
      ModelAssign(self+MODEL_FEET_TEX1, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_TEX2, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, WHITE)
    if(pants_type == 1)
      // Stuff for pants type 1 - Normal Pants
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRLEGS0.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, body_color_dull)
      ModelAssign(self+MODEL_LEGS_TEX2, foot_color)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADLEG0.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, WHITE)
    if(pants_type == 2)
      // Stuff for pants type 2 - Sweat Pants
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRPANT2.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, "FILE:PANT2.RGB")
      ModelAssign(self+MODEL_LEGS_TEX1, body_color_dull)
      ModelAssign(self+MODEL_LEGS_TEX2, flesh_color)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADPNT2.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, limb_color_rgb)
    if(pants_type == 3)
      // Stuff for pants type 3 - Healer Skirt
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRPANT3.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, flesh_color)
      ModelAssign(self+MODEL_LEGS_TEX1, "FILE:PANT3.RGB")
      ModelAssign(self+MODEL_LEGS_TEX2, foot_color)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:=ARMOR.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, body_color_rgb)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRSHOE3.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, body_color_dull)
      ModelAssign(self+MODEL_FEET_TEX1, "FILE:DBLACK.RGB")
      ModelAssign(self+MODEL_FEET_TEX2, "FILE:=GEM.RGB")
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, limb_color_rgb)
    if(pants_type == 4)
      // Stuff for pants type 4 - Wizard Robe
      ModelAssign(self+MODEL_LEGS_FILE, "FILE:PLRPANT4.RDY")
      ModelAssign(self+MODEL_LEGS_TEX0, body_color_dull)
      ModelAssign(self+MODEL_LEGS_TEX1, "FILE:BUCKLE.RGB")
      ModelAssign(self+MODEL_LEGS_TEX2, limb_color_dull)
      ModelAssign(self+MODEL_LEGS_TEX3, "FILE:SHADPNT4.RGB")
      ModelAssign(self+MODEL_LEGS_COLOR, YELLOW)

      ModelAssign(self+MODEL_FEET_FILE, "FILE:PLRFEET1.RDY")
      ModelAssign(self+MODEL_FEET_TEX0, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_TEX1, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_TEX2, foot_color)
      ModelAssign(self+MODEL_FEET_TEX3, "FILE:WHITE.RGB")
      ModelAssign(self+MODEL_FEET_COLOR, WHITE)


  // Give the character some extra details, depending on class...
  // Not really a mouth...  Things more like ears and beards and stuff...
  if(mouth_type == 0)
    // Stuff for mouth type 0 - Human Ears
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS0.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, WHITE)
  if(mouth_type == 1)
    // Stuff for mouth type 1 - Human Ears, Full Beard
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS1.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, hair_texture)
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:DBLACK.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 2)
    // Stuff for mouth type 2 - Human Ears, 80's Mustache
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS2.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, hair_texture)
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:DBLACK.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 3)
    // Stuff for mouth type 3 - Human Ears, 70's Mustache
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS3.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, hair_texture)
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:DBLACK.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:HAIRSHIN.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 4)
    // Stuff for mouth type 4 - Human Ears, 1800's Mustache
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS4.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, hair_texture)
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:DBLACK.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 5)
    // Stuff for mouth type 5 - Human Ears, Facial Scruff
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS5.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:=FACE0.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 6)
    // Stuff for mouth type 6 - Human Ears, Slim Mustache
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS6.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:=FACE0.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 7)
    // Stuff for mouth type 7 - Hubbin Ears, Hairy feet
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS7.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:=FACE1.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)
  if(mouth_type == 8)
    // Stuff for mouth type 8 - Elf Ears
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS8.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, WHITE)
  if(mouth_type == 9)
    // Stuff for mouth type 9 - Human Ears, Sideburns
// !!!BAD!!!
// !!!BAD!!!  May have to override to type 0 if helm'd...
// !!!BAD!!!
    ModelAssign(self+MODEL_MOUTH_FILE, "FILE:PLREARS9.RDY")
    ModelAssign(self+MODEL_MOUTH_TEX0, flesh_color)
    ModelAssign(self+MODEL_MOUTH_TEX1, hair_texture)
    ModelAssign(self+MODEL_MOUTH_TEX2, "FILE:DBLACK.RGB")
    ModelAssign(self+MODEL_MOUTH_TEX3, "FILE:WHITE.RGB")
    ModelAssign(self+MODEL_MOUTH_COLOR, hair_color_rgb)


  // Give the character some eyes...
  ModelAssign(self+MODEL_EYES_FILE, "FILE:PLREYES0.RDY")
  ModelAssign(self+MODEL_EYES_TEX0, "FILE:WHITE.RGB")
  ModelAssign(self+MODEL_EYES_TEX1, "FILE:WHITE.RGB")
  ModelAssign(self+MODEL_EYES_TEX2, "FILE:WHITE.RGB")
  STANDARD.EyeSetup(self+MODEL_EYES_TEX3, self.team)
  ModelAssign(self+MODEL_EYES_COLOR, WHITE)


  // Put weapons in the character's hands...
  STANDARD.ItemModelSetup(MODEL_LEFT_FILE)
  STANDARD.ItemModelSetup(MODEL_RIGHT_FILE)

//-----------------------------------------------------------------------
int DefenseRating()
  STANDARD.DefenseRating()

//-----------------------------------------------------------------------
int ButtonEvent()
  STANDARD.ButtonEvent()

//-----------------------------------------------------------------------
int Event()
  int self, temp, pitch
  self = FindSelf()
  if(self.event == EVENT_DAMAGED)
    temp = RollDice(1, 3)
    pitch = 235 + RollDice(1, 40)
    if(self.class == CLASS_SOLDIER)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-SOLDI01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-SOLDI02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-SOLDI03.RAW", pitch, 255)
      else
        PlaySound("FILE:-SOLDI04.RAW", pitch, 255)
    if(self.class == CLASS_WIZARD)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-WIZAR01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-WIZAR02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-WIZAR03.RAW", pitch, 255)
      else
        PlaySound("FILE:-WIZAR04.RAW", pitch, 255)
    if(self.class == CLASS_HEALER)
      if(self.hits > 0)
        if(RollDice(1, 2) == 1)
          PlaySound("FILE:-HEAL01.RAW", pitch, 255)
        else
          PlaySound("FILE:-HEAL02.RAW", pitch, 255)
      else
        PlaySound("FILE:-HEAL03.RAW", pitch, 255)
    if(self.class == CLASS_GNOME)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-GNOME01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-GNOME02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-GNOME03.RAW", pitch, 255)
      else
        PlaySound("FILE:-GNOME04.RAW", pitch, 255)
    if(self.class == CLASS_ELF)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-ELF01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-ELF02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-ELF03.RAW", pitch, 255)
      else
        PlaySound("FILE:-ELF04.RAW", pitch, 255)
    if(self.class == CLASS_MYSTIC)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-MYSTI01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-MYSTI02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-MYSTI03.RAW", pitch, 255)
      else
        PlaySound("FILE:-MYSTI04.RAW", pitch, 255)
    if(self.class == CLASS_DWARF)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-DWARF01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-DWARF02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-DWARF03.RAW", pitch, 255)
      else
        PlaySound("FILE:-DWARF04.RAW", pitch, 255)
    if(self.class == CLASS_HUBBIN)
      if(self.hits > 0)
        if(temp == 1)
          PlaySound("FILE:-HUBBI01.RAW", pitch, 255)
        if(temp == 2)
          PlaySound("FILE:-HUBBI02.RAW", pitch, 255)
        if(temp == 3)
          PlaySound("FILE:-HUBBI03.RAW", pitch, 255)
      else
        PlaySound("FILE:-HUBBI04.RAW", pitch, 255)
  
  STANDARD.Event()
  STANDARD.JumpOutOfWaterEvent()
  STANDARD.LevelUpEvent(5, 0, 0, 0, 0)
  if(self.class == CLASS_HEALER)
    self.hitstap = 0

//-----------------------------------------------------------------------
int FrameEvent()
  STANDARD.FrameEvent()

//-----------------------------------------------------------------------
int GetName()
  StringClear(NAME_STRING)
  StringAppend(NAME_STRING, "Player", 256)
  STANDARD.NameAppendHits()

//-----------------------------------------------------------------------
int AIScript()
  STANDARD.AIScript()

//-----------------------------------------------------------------------
int Refresh()
  STANDARD.Refresh()

//-----------------------------------------------------------------------
int Spawn()
  int self, i, j, char, slot
  self = FindSelf()

  self.boxsize = 0.85
  self.height = 5
  self.flags = CHAR_GRAVITY_ON | CHAR_CAN_RIDE_MOUNT | CHAR_FULL_NETWORK
  self.sflags = SCRIPT_ALLOW_BODY
  if(self.class != CLASS_WIZARD && self.class != CLASS_MYSTIC && self.class != CLASS_GNOME && self.class != CLASS_HEALER)
    self.sflags = self.sflags | SCRIPT_ALLOW_HELM
  if(self.class != CLASS_WIZARD)
    self.sflags = self.sflags | SCRIPT_ALLOW_LEGS
  self.vflags = VIRTUE_FLAG_HITS
  self.vspin = 1024
  self.timer = 1

  // Stats based on class...
  self.hitsmax = RollDice(1, 5)-1
  self.manamax = RollDice(1, 5)-1
  self.str = RollDice(1, 5)-1
  self.dex = RollDice(1, 5)-1
  self.int = RollDice(1, 5)-1
  if(self.class == CLASS_SOLDIER)
    // Bonus of 30
    self.hitsmax = self.hitsmax + self.manamax + 5
    self.str = self.str + 10
    self.dex = self.dex + 10
    self.int = self.int + 5
    self.manamax = 0
  if(self.class == CLASS_WIZARD)
    // Bonus of 30
    self.hitsmax = self.hitsmax + 3
    self.str = self.str + 2
    self.dex = self.dex + 3
    self.int = self.int + 15
    self.manamax = self.manamax + 7
  if(self.class == CLASS_HEALER)
    // Bonus of 30
    self.hitsmax = self.hitsmax + self.manamax + 8
    self.str = self.str + 10
    self.dex = self.dex + 6
    self.int = self.int + 6
    self.manamax = 0
  if(self.class == CLASS_GNOME)
    // Bonus of 30
    self.hitsmax = self.hitsmax + 7
    self.str = self.str + self.manamax + 3
    self.dex = self.dex + 5
    self.int = self.int + 15
    self.manamax = 0
    self.height = 4
  if(self.class == CLASS_ELF)
    // Bonus of 40
    self.hitsmax = self.hitsmax + self.manamax + 5
    self.str = self.str + 10
    self.dex = self.dex + 15
    self.int = self.int + 10
    self.manamax = 0
  if(self.class == CLASS_MYSTIC)
    // Bonus of 30
    self.hitsmax = self.hitsmax + 4
    self.str = self.str + 5
    self.dex = self.dex + 10
    self.int = self.int + 10
    self.manamax = self.manamax + 1
  if(self.class == CLASS_DWARF)
    // Bonus of 40, but extra hard to get mana...
    self.hitsmax = self.hitsmax + self.manamax + 10
    self.str = self.str + 15
    self.dex = self.dex + 5
    self.int = self.int + 5
    self.manamax = 0
    self.manacst = 10
    self.height = 4
    self.sflags = self.sflags | SCRIPT_NO_POISON | SCRIPT_NO_PETRIFY
  if(self.class == CLASS_HUBBIN)
    // Bonus of 30
    self.hitsmax = self.hitsmax + 5
    self.str = self.str + 4
    self.dex = self.dex + 15
    self.int = self.int + self.manamax + 6
    self.manamax = 0
    self.height = 4
  self.hits = self.hitsmax
  self.mana = self.manamax

  
  if(self.class >= 100 && self.class <= 112)
    slot = (self.class - 100) * 100
    i = slot
    j = 16 + slot
    char = 0
    while(i < j)
      StringSetValue(self.name, char, FileReadByte("FILE:SAVE.DAT", i))
      char++
      i++
    self.hits = FileReadByte("FILE:SAVE.DAT", 20 + slot)
    self.mana = FileReadByte("FILE:SAVE.DAT", 21 + slot)
    self.hitstap = FileReadByte("FILE:SAVE.DAT", 22 + slot)
    self.manatap = FileReadByte("FILE:SAVE.DAT", 23 + slot)
    self.hitsmax = FileReadByte("FILE:SAVE.DAT", 24 + slot)
    self.manamax = FileReadByte("FILE:SAVE.DAT", 25 + slot)
    self.keys = FileReadByte("FILE:SAVE.DAT", 26 + slot)
    self.class = FileReadByte("FILE:SAVE.DAT", 29 + slot)
    self.str = FileReadByte("FILE:SAVE.DAT", 30 + slot)
    self.dex = FileReadByte("FILE:SAVE.DAT", 31 + slot)
    self.int = FileReadByte("FILE:SAVE.DAT", 32 + slot)
    self.vircomp = FileReadByte("FILE:SAVE.DAT", 33 + slot)
    self.virdill = FileReadByte("FILE:SAVE.DAT", 34 + slot)
    self.virhono = FileReadByte("FILE:SAVE.DAT", 35 + slot)
    self.virfait = FileReadByte("FILE:SAVE.DAT", 36 + slot)
    self.vircour = FileReadByte("FILE:SAVE.DAT", 37 + slot)
    self.height = FileReadByte("FILE:SAVE.DAT", 38 + slot)
    self.sflags = FileReadByte("FILE:SAVE.DAT", 39 + slot)
    self.eqcol01 = FileReadByte("FILE:SAVE.DAT", 40 + slot)
    self.eqcol23 = FileReadByte("FILE:SAVE.DAT", 41 + slot)
    self.eqleft = FileReadByte("FILE:SAVE.DAT", 42 + slot)
    self.eqright = FileReadByte("FILE:SAVE.DAT", 43 + slot)
    self.eqspec1 = FileReadByte("FILE:SAVE.DAT", 44 + slot)
    self.eqspec2 = FileReadByte("FILE:SAVE.DAT", 45 + slot)
    self.eqhelm = FileReadByte("FILE:SAVE.DAT", 46 + slot)
    self.eqbody = FileReadByte("FILE:SAVE.DAT", 47 + slot)
    self.eqlegs = FileReadByte("FILE:SAVE.DAT", 48 + slot)
    self.item00 = FileReadByte("FILE:SAVE.DAT", 49 + slot)
    self.item01 = FileReadByte("FILE:SAVE.DAT", 50 + slot)
    self.item02 = FileReadByte("FILE:SAVE.DAT", 51 + slot)
    self.item03 = FileReadByte("FILE:SAVE.DAT", 52 + slot)
    self.item04 = FileReadByte("FILE:SAVE.DAT", 53 + slot)
    self.item05 = FileReadByte("FILE:SAVE.DAT", 54 + slot)
    self.item06 = FileReadByte("FILE:SAVE.DAT", 55 + slot)
    self.item07 = FileReadByte("FILE:SAVE.DAT", 56 + slot)
    self.item08 = FileReadByte("FILE:SAVE.DAT", 57 + slot)
    self.item09 = FileReadByte("FILE:SAVE.DAT", 58 + slot)
    self.item10 = FileReadByte("FILE:SAVE.DAT", 59 + slot)
    self.item11 = FileReadByte("FILE:SAVE.DAT", 60 + slot)
    self.item12 = FileReadByte("FILE:SAVE.DAT", 61 + slot)
    self.item13 = FileReadByte("FILE:SAVE.DAT", 62 + slot)
    self.item14 = FileReadByte("FILE:SAVE.DAT", 63 + slot)
    self.item15 = FileReadByte("FILE:SAVE.DAT", 64 + slot)
    self.morphoc = FileReadByte("FILE:SAVE.DAT", 65 + slot)
    self.exp = FileReadByte("FILE:SAVE.DAT", 66 + slot)
    self.level = FileReadByte("FILE:SAVE.DAT", 67 + slot)
    self.statpts = FileReadByte("FILE:SAVE.DAT", 68 + slot)
    self.oflags = FileReadByte("FILE:SAVE.DAT", 69 + slot)
    self.mflags = FileReadByte("FILE:SAVE.DAT", 70 + slot)
    self.vflags = FileReadByte("FILE:SAVE.DAT", 71 + slot)
    self.tetimer = FileReadByte("FILE:SAVE.DAT", 90 + slot)
    self.money = FileReadByte("FILE:SAVE.DAT", 75 + slot) + FileReadByte("FILE:SAVE.DAT", 76 + slot) + FileReadByte("FILE:SAVE.DAT", 77 + slot) + FileReadByte("FILE:SAVE.DAT", 78 + slot) + FileReadByte("FILE:SAVE.DAT", 79 + slot) + FileReadByte("FILE:SAVE.DAT", 80 + slot) 
    self.food = FileReadByte("FILE:SAVE.DAT", 81 + slot) + FileReadByte("FILE:SAVE.DAT", 82 + slot)
    self.food = self.food * 100
    self.food = self.food + FileReadByte("FILE:SAVE.DAT", 83 + slot)
    
  else
    // Starting equipment...
    if(self.class == CLASS_SOLDIER)
      self.eqright = ITEM_SHORT_SWORD
      self.eqleft = ITEM_SHIELD
      self.eqbody = ITEM_BODY_1
      self.item01 = ITEM_HEAL
      self.item02 = ITEM_FOOD
      self.item03 = ITEM_BOOK_5
    if(self.class == CLASS_WIZARD)
      self.eqright = ITEM_DAGGER
      if(RollDice(1, 100) < 50)
        self.eqleft = ITEM_SPELL_MISSILE
      else
        self.eqleft = ITEM_SPELL_POISON_CLOUD
      self.item01 = RANDOM.SpellOrb(1)
      i = 0
      while(i < 10)
        if(self.item01 == self.eqleft)
          self.item01 = RANDOM.SpellOrb(1)
        i++
      self.item02 = RANDOM.SpellOrb(2)
      self.item03 = ITEM_MANA
      self.item04 = ITEM_MANA
      self.item05 = ITEM_MANA
      self.item06 = ITEM_BOOK_4
      self.item07 = ITEM_FOOD
    if(self.class == CLASS_HEALER)
      self.eqright = ITEM_HAMMER
      self.eqleft = ITEM_SHIELD
      self.item01 = ITEM_KISS
      self.item02 = ITEM_HEAL
      self.item03 = ITEM_HEAL
      self.item04 = ITEM_HEAL
      self.item05 = ITEM_FOOD
    if(self.class == CLASS_GNOME)
      self.eqleft = ITEM_HAMMER
      self.eqright = ITEM_GONNE
      self.item01 = ITEM_TINKER
      self.item02 = ITEM_AMMO_10
      self.item03 = ITEM_AMMO_10
      self.item04 = ITEM_AMMO_10
      self.item05 = ITEM_FOOD
    if(self.class == CLASS_ELF)
      self.eqright = ITEM_SHORT_SWORD
      self.eqleft = ITEM_BOW
      self.item01 = ITEM_QUIVER_10
      self.item02 = ITEM_QUIVER_10
      self.item03 = ITEM_QUIVER_10
      self.item04 = ITEM_QUIVER_10
      self.item05 = ITEM_QUIVER_10
      self.item06 = ITEM_FOOD
    if(self.class == CLASS_MYSTIC)
      self.eqright = ITEM_SHORT_SWORD
      if(RollDice(1, 100) < 50)
        self.eqleft = ITEM_SPELL_KNOCK
      else
        self.eqleft = ITEM_SPELL_DISENCHANT
      self.item01 = ITEM_FOOD
    if(self.class == CLASS_DWARF)
      self.eqleft = ITEM_SHIELD
      self.eqright = ITEM_PICK_AXE
      self.eqbody = ITEM_BODY_2
      self.item01 = ITEM_MEAT
    if(self.class == CLASS_HUBBIN)
      self.eqright = ITEM_DAGGER
      self.eqleft = ITEM_HIDE
      self.item01 = ITEM_FISH
      self.item02 = ITEM_FISH
      self.item03 = ITEM_RING // ITEM_FISHING_POLE
      self.item04 = ITEM_FISHING_POLE
    self.eqspec1 = ITEM_JUMP
    self.eqspec2 = ITEM_TALK
    self.item00 = ITEM_PRAY
    self.food = MAX_FOOD - (RollDice(1, 30)*30)  // Ten minutes before hunger...

  ModelSetup()
  DefenseRating()

//-----------------------------------------------------------------------

